col0,col1,col2,col3,col4,col5,col6,col7,col8,col9,col10
9991,comment,9969.0,9969.0,0,0,mattjaynes,,,"Wow, this is awesome. Unfortunately it will probably be a good wait before this is built and released to the public.<p>In the meantime, I've been developing a framework using EC2, S3, S3DFS (DFS = Distributed File System) along with SQLite to try and solve the database problem on AWS. <p>S3DFS allows you to mount an S3 bucket to one or multiple EC2 instances as if it were a local filesystem. It works at the block level and has read/write caching - so is very fast. (Note: It's free to use for development, but otherwise requires a paid commercial license.)<p>Since SQLite uses flat files and has no database server or client, it is ideal for use on S3. SQLite only scales well to a point, so to get around its limitations I am separating each user into their own database (each database is a separate flat file). This can sometimes be a bad idea, but SQLite allows you to attach multiple databases together to essentially create a temporary master database where you can run queries across all the user databases at once. This will be handy for search indexing, site-wide stats, etc. In order to change the user databases I will have utilities to allow global scheme alterations.<p>So, by adding EC2 instances that are all attached to the same S3 bucket, and using round-robin dns to distribute traffic among them, you can theoretically scale a web service infinitely. Just launch a new EC2 instance and add it to the round-robin dns pool and you're done! Even that could be automated to respond dynamically to traffic.<p>Imagine the long-term cost-savings from only having to build your app and architecture once and not having to go through a more complex scaling process like this: <a href=""http://www.scribd.com/doc/21793/Scaling-PHPMySQL-Presentation-from-Flickr"">http://www.scribd.com/doc/21793/Scaling-PHPMySQL-Presentation-from-Flickr</a><p>Certainly you should only worry about scaling after your app is up and running, but what if you didn't have to ever worry about it? That's the goal of this framework.<p>This is pre-alpha of course and I'm still in the development and experimentation stage, but I wanted to share with the community and get some feedback!<p><a href=""http://www.openfount.com/blog/s3dfs-for-ec2"">http://www.openfount.com/blog/s3dfs-for-ec2</a><p><a href=""http://www.sqlite.org/"">http://www.sqlite.org/</a><p><a href=""http://docs.amazonwebservices.com/AmazonEC2/gsg/2006-06-26/"">http://docs.amazonwebservices.com/AmazonEC2/gsg/2006-06-26/</a><p><a href=""http://docs.amazonwebservices.com/AmazonS3/2006-03-01/gsg/"">http://docs.amazonwebservices.com/AmazonS3/2006-03-01/gsg/</a><p>Update: Since this was so lengthy, I also added it as a post here: <a href=""http://blog.nanobeepers.com/2007/04/07/infinitely-scalable-framework-with-aws/"">http://blog.nanobeepers.com/2007/04/07/infinitely-scalable-framework-with-aws/</a><p>Update2: Please leave any feedback here: <a href=""http://news.ycombinator.com/comments?id=10001"">http://news.ycombinator.com/comments?id=10001</a> ",1175942443
9989,comment,9986.0,9986.0,0,0,jrbedard,,,"Los Angeles, 1, 24\n",1175942276
9988,comment,9986.0,9986.0,0,0,theoutlander,,,"Seattle, 2, [25, 22]",1175941990
9987,comment,9908.0,9908.0,0,0,BrandonM,,,"I read about the fallout from that announcement sometime last year.  By announcing that they were giving back money to their shareholders, they opened the door for savvy stock market gurus.  These guys milked it for all it was worth by first loading up on the stock in order to get the cash from the dividends.  Because all these people were buying the stock, its price became artificially inflated, so they proceeded to borrow against the stock at this point (in order to short-sell later).  Then the dividends came, and they got the $3/share from Microsoft.  Immediately after this, they proceeded to sell the stocks that got them the dividends, which led to the stock price falling sharply.  Finally, to round it all out, they proceeded to make good on the short-sells once the stocks were low, leading to a nice profit all-around.<p>I wish I remembered where I read about this scheme; it sounded pretty brilliant to me.  I always wondered, though, if a bunch of people playing the stock market profited from this, who lost out?  I guess the long-time shareholders and Microsoft, itself.",1175941823
9986,story,,,8,3,theoutlander,"Applicant Demographics: Location, Team size and Age?",,,1175941821
9985,comment,9770.0,9974.0,0,0,theoutlander,,,"I do like the ability to install on demand! Why is Windows leading client-side? Because it is easy! I am speaking from an average users perspective. Not us! I have used VI and I love it! Visual Studio is NOT like notepad. I'm sorry but AFAIK, VI or Emacs cannot provide intellisense can it? I have used both environments for development and based on my productivity, I concluded that Windows is a better environment for ME. Ultimately, it is about getting the job done FAST and using what works for you. I have used freeBSD and it is definitely STABLE, but really not something I would like to sit and develop on. Think about the millions of END-USERS??? Windows is really the solution for them... at least for now. Although Windows has its issues, I think Microsoft has improved its product in many ways. Do you realize how hard of a problem it is to solve, making the OS secure and user-friendly at the same time? I like Windows, Redhat and freeBSD... I wish Windows stayed away from the Server market and likewise Redhat stayed away from the client!",1175941701
9984,comment,9852.0,9895.0,0,0,BrandonM,,,"Wow, just wow.",1175940121
